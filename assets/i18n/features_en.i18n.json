{
	"account": {
		"menu_item_description(context=EBalanceExchangeMenuItem)": {
			"receive": "Receive",
			"send": "Send"
		},
		"total_sum": {
			"title": "Balance"
		},
		"total_amount": {
			"title": "Total amount of all transactions",
			"transaction_type_count": "@:models.transaction.type_description (${count: decimalPattern})",
			"total_amount": "with a total amount of"
		}
	},
	"account_form": {
		"title": "Account",
		"title_input_placeholder": "account name",
		"balance_input_placeholder": "current balance",
		"button_save": "Save"
	},
	"accounts": {
		"title": "Accounts"
	},
	"balance_exchange_form": {
		"title(context=EBalanceExchangeMenuItem)": {
			"receive": "Receive",
			"send": "Send"
		},
		"account_select_description(context=EBalanceExchangeMenuItem)": {
			"receive": "The account we are receiving from",
			"send": "The account we are sending to"
		},
		"amount_input_placeholder(context=EBalanceExchangeMenuItem)": {
			"receive": "amount to receive",
			"send": "amount to send"
		},
		"converted_amount_input_placeholder": "amount after conversion",
		"converted_amount_input_description(context=EBalanceExchangeMenuItem)": {
			"receive": "Click on \"=\" to convert the receive amount",
			"send": "Click on \"=\" to convert the send amount"
		},
		"button_submit(context=EBalanceExchangeMenuItem)": {
			"receive": "Receive",
			"send": "Send"
		}
	},
	"categories": {
		"title": "Categories"
	},
	"category": {
		"total_amount": {
			"title": "Total amount of all transactions"
		}
	},
	"category_form": {
		"title_input_placeholder": "category name",
		"button_save": "Save"
	},
	"feed": {
		"account": {
			"title_all": "All accounts",
			"account_count": {
				"one": "${n: decimalPattern} account",
				"other": "${n: decimalPattern} accounts"
			}
		},
		"button_search": "search",
		"add_menu_item(context=EFeedMenuItem)": {
			"addAccount": "Account",
			"addExpenseCategory": "Expense Category",
			"addIncomeCategory": "Income Category",
			"addTag": "Tag"
		}
	},
	"import": {
		"button_next": "Next",
		"load_csv": {
			"title": "Upload CSV",
			"description": "Let's get started with uploading your CSV file. First, pick a file that has at least three columns: 'amount', 'date' and 'category' of the transaction. The names of these columns can be different, no worries!\n\nJust a heads up, the 'amount' column should not have any currency symbols. Also, there should be a decimal point before the cents, not a comma. After that, we'll take care of the rest!",
			"error_message": "I couldn't read the file. It might be broken or empty. Can you try uploading a different file?",
			"button_upload": "Select CSV file"
		},
		"map_columns": {
			"title": "The '@:models.import.column_title' column",
			"description": "Choose the column that matches\nthe '@:models.import.column_title' column.",
			"column": {
				"title_column": "Columns",
				"value_column": "Values"
			},
			"button_rotate_entries": {
				"title": "Next record",
				"description": {
					"one": "${count: decimalPattern} out of ${n: decimalPattern} record",
					"other": "${count: decimalPattern} out of ${n: decimalPattern} records"
				}
			}
		},
		"map_columns_validation": {
			"title": "Validation",
			"description_validation": "Just checking the data.",
			"description_error": "Oops, found a few errors.",
			"description_validated": "All good now! You can keep going.",
			"error_message": {
				"missing_value": "the required value is missing",
				"unknown_value": "the value was not recognized",
				"only_two_options": "there should only be two options available"
			}
		},
		"map_accounts": {
			"title": "Accounts",
			"description_new": "You'll need to create an account to manage all your transactions. You can create more accounts later if needed.",
			"description_bind": {
				"one": "I found $n account that needs some info added. It'll be a quick task.",
				"other": "I found $n accounts that need some info added. It'll be a quick task."
			},
			"account_placeholder": "Account"
		},
		"map_transaction_type": {
			"title": "Transaction Types",
			"description": "Are the transactions in this table expenses?",
			"tab_expense": "Yes, it's @:models.transaction.type_description",
			"tab_income": "No, it's @:models.transaction.type_description"
		},
		"map_categories": {
			"title": "Categories",
			"description": {
				"one": "I found $n category that needs to be linked to the predefined categories or supplemented with information.",
				"other": "I found $n categories that need to be linked to the predefined categories or supplemented with information."
			},
			"category_section_title": "@:models.transaction.type_full_description: ${count: decimalPattern}/${n: decimalPattern}",
			"action_sheet": {
				"title": "Category Linking",
				"description": "When you link a category to one of the predefined ones, all transactions under the original category will be moved to the predefined category.\n\nFor instance, if you had a category called 'Store Purchases' and you picked the predefined category 'Groceries,' after the import, the category will be named 'Groceries.'\n\nIf you don't want to link it, you can keep the original category, but you'll need to add some extra info.",
				"menu_item(context=EImportCategoryMenuAction)": {
					"link": "Link",
					"create": "Supplement"
				}
			}
		},
		"import_to_db": {
			"title": "Almost there!",
			"description": "The operation should be quick. In a jiffy, I'll import all the data and send you to the main screen. Just don't close the screen while the data transfer is happening!"
		}
	},
	"search": {
		"input_placeholder": "search",
		"page_title(context=ESearchPage)": {
			"accounts": "Accounts",
			"categories": "Categories",
			"tags": "Tags"
		},
		"page_count": "${n: decimalPattern}",
		"tab_title(context=ESearchTab)": {
			"transactions": "Transactions",
			"accounts": "Accounts",
			"categories": "Categories",
			"tags": "Tags"
		}
	},
	"settings": {
		"title": "Settings",
		"theme": {
			"title": "Theme"
		},
		"color_mode": {
			"title": "Appearance",
			"value": {
				"on": "Pretty",
				"off": "Boring"
			},
			"footer": "It affects accounts, categories, and transactions."
		},
		"cents_visibility": {
			"title": "Display cents"
		},
		"tags_visibility": {
			"title": "Display tags in the feed"
		},
		"default_transaction_type": {
			"title": "Default Transaction Type",
			"footer": "This transaction type will be selected when creating a new transaction."
		},
		"deletion_confirmation": {
			"header": "Confirmation of deletion",
			"transaction": "Transactions",
			"account": "Accounts",
			"category": "Categories",
			"tag": "Tags"
		},
		"import_export": {
			"header": "Import and export Mony file",
			"import_title": "Import",
			"export_title": "Export"
		},
		"support": {
			"header": "Support",
			"review_title": "Rate the app",
			"support_title": "Contact support",
			"email_subject": "I'm writing from the Mony app",
			"email_body_hint": "Important Info. Don't remove"
		},
		"language": {
			"title": "Language",
			"value(context=ESettingsLanguage)": {
				"system": "System",
				"english": "English",
				"russian": "Русский"
			}
		},
		"docs": {
			"header": "Documents",
			"title": "Privacy Policy"
		},
		"danger_zone": {
			"header": "Danger Zone",
			"title": "Delete All Data",
			"alert": {
				"title": "Delete All Data",
				"description": "It's forever. Export the data before deleting."
			}
		}
	},
	"start": {
		"subtitle": "remembers where the money went.",
		"button_next": "Let's go!",
		"privacy_policy": "Privacy Policy"
	},
	"start_account": {
		"title": "Account",
		"description": "To start, you'll need to create an account where you can add new transactions. Later, there'll be an option to create other accounts. Just a heads up, this account isn't linked to a real bank account.\n\nYou can either create a new account or import your data from the 'export_mony.json' file or from a CSV file from other apps.",
		"button_create": "Create Account",
		"button_import_mony": "Mony",
		"button_import_csv": "CSV"
	},
	"stats": {
		"title": "Statistics",
		"calendar_today": "Today",
		"transactions_count": {
			"one": "${n: decimalPattern} transaction",
			"other": "${n: decimalPattern} transactions"
		},
		"transaction_type_count": "@:models.transaction.type_description (${count: decimalPattern})"
	},
	"tag": {
		"title": "Tag",
		"total_amount": {
			"title": "Total amount"
		}
	},
	"tag_form": {
		"title": "Tag",
		"input_placeholder": "tag name",
		"button_save": "Save"
	},
	"tags": {
		"title": "Tags"
	},
	"transaction": {
		"note_title": "Note"
	},
	"transaction_form": {
		"calendar_today": "Today",
		"category_select_placeholder": "Category",
		"tag_button_placeholder": "add tags...",
		"tag_form": {
			"title": "Tags",
			"not_found": "To create a new tag, tap 'Done'",
			"input_placeholder": "search for tags or create new ones"
		},
		"note_button_placeholder": "add a note...",
		"note_form": {
			"title": "Note",
			"input_placeholder": "write down some details..."
		},
		"keyboard_hint": "To delete a number,\nswipe left or right\non the keyboard.",
		"keyboard_hint_button": "OK"
	}
}
